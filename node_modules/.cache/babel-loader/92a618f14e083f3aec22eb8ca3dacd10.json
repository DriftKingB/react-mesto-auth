{"ast":null,"code":"import { settingsForApi } from \"./constants\";\n\nclass Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  _checkResponse(res) {\n    return res.ok ? Promise.resolve(res.json()) : Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getCohortCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  postSectionItem(cardName, cardLink) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: cardName,\n        link: cardLink\n      })\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  removeCardLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  putCardLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n\n  patchUserInfo(userName, userAbout) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: userName,\n        about: userAbout\n      })\n    }).then(this._checkResponse);\n  }\n\n  patchUserAvatar(avatarLink) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatarLink\n      })\n    }).then(this._checkResponse);\n  }\n\n}\n\nexport default new Api(settingsForApi);","map":{"version":3,"names":["settingsForApi","Api","constructor","baseUrl","headers","_baseUrl","_headers","_checkResponse","res","ok","Promise","resolve","json","reject","status","getCohortCards","fetch","method","then","postSectionItem","cardName","cardLink","body","JSON","stringify","name","link","deleteCard","cardId","removeCardLike","putCardLike","getUserInfo","patchUserInfo","userName","userAbout","about","patchUserAvatar","avatarLink","avatar"],"sources":["/Users/maksim/Desktop/dev/mesto-react/src/utils/Api.js"],"sourcesContent":["import { settingsForApi } from \"./constants\";\n\nclass Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  _checkResponse(res) {\n    return (res.ok) ? Promise.resolve(res.json()) : Promise.reject(`Ошибка: ${res.status}`)\n  }\n\n  getCohortCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n        method: 'GET',\n        headers: this._headers\n    })\n      .then(this._checkResponse);\n  }\n\n  postSectionItem(cardName, cardLink) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: cardName,\n        link: cardLink\n      })\n    })\n      .then(this._checkResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n      .then(this._checkResponse);\n  }\n\n  removeCardLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n      .then(this._checkResponse);\n  }\n\n  putCardLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    })\n      .then(this._checkResponse);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    })\n      .then(this._checkResponse);\n  }\n\n  patchUserInfo(userName, userAbout) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: userName,\n        about: userAbout\n      })\n    })\n      .then(this._checkResponse);\n  }\n\n  patchUserAvatar(avatarLink) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatarLink\n      })\n    })\n      .then(this._checkResponse);\n  }\n}\n\nexport default new Api(settingsForApi);"],"mappings":"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"},"metadata":{},"sourceType":"module"}