{"ast":null,"code":"import { authConfig } from \"./constants\";\n\nclass Auth {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  } // _showResponseError(responseCode, errors) {\n  //   errors.forEach(err => {\n  //     if (err.code === responseCode) {\n  //       console.log(`Ошибка ${err.code} - ${err.message}`)\n  //       return\n  //     }\n  //   })\n  //   console.log(`Ошибка ${responseCode}`)\n  // }\n\n\n  _checkResponse(res) {\n    return res.status === 200 ? Promise.resolve(res.json()) : Promise.reject(res.status);\n  }\n\n  register(email, password) {\n    console.log(email, password);\n    console.log(JSON.stringify({\n      password: password,\n      email: email\n    }));\n    return fetch(`${this._baseUrl}/signup`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        password: password,\n        email: email\n      })\n    }).then(this._checkResponse);\n  }\n\n  login(_ref2) {\n    let {\n      email,\n      password\n    } = _ref2;\n    return fetch(`${this._baseUrl}/signin`, {\n      method: 'POST',\n      headers: this._headers,\n      body: {\n        'email': email.value,\n        'password': password.value\n      }\n    }).then(this._checkResponse);\n  }\n\n  tokenCheck(token) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`\n      }\n    }).then(this._checkResponse);\n  }\n\n}\n\nexport default new Auth(authConfig);","map":{"version":3,"names":["authConfig","Auth","constructor","baseUrl","headers","_baseUrl","_headers","_checkResponse","res","status","Promise","resolve","json","reject","register","email","password","console","log","JSON","stringify","fetch","method","body","then","login","value","tokenCheck","token"],"sources":["/Users/maksim/Desktop/dev/mesto-react/src/utils/Auth.js"],"sourcesContent":["import { authConfig } from \"./constants\";\r\n\r\nclass Auth {\r\n  constructor({ baseUrl, headers }) {\r\n    this._baseUrl = baseUrl;\r\n    this._headers = headers;\r\n  }\r\n\r\n  // _showResponseError(responseCode, errors) {\r\n  //   errors.forEach(err => {\r\n  //     if (err.code === responseCode) {\r\n  //       console.log(`Ошибка ${err.code} - ${err.message}`)\r\n  //       return\r\n  //     }\r\n  //   })\r\n  //   console.log(`Ошибка ${responseCode}`)\r\n  // }\r\n\r\n  _checkResponse(res) {\r\n    return (res.status === 200) ? Promise.resolve(res.json()) : Promise.reject(res.status)\r\n  }\r\n\r\n  register(email, password) {\r\n    console.log(email, password)\r\n    console.log(JSON.stringify({ password: password, email: email }))\r\n    return fetch(`${this._baseUrl}/signup`, {\r\n        method: 'POST',\r\n        headers: this._headers,\r\n        body: JSON.stringify({ password: password, email: email })\r\n    })\r\n      .then(this._checkResponse);\r\n  }\r\n\r\n  login({ email, password }) {\r\n    return fetch(`${this._baseUrl}/signin`, {\r\n        method: 'POST',\r\n        headers: this._headers,\r\n        body: {\r\n          'email': email.value,\r\n          'password': password.value\r\n        }\r\n    })\r\n      .then(this._checkResponse);\r\n  }\r\n\r\n  tokenCheck(token) {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n        method: 'GET',\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          \"Authorization\" : `Bearer ${token}`\r\n        }\r\n    })\r\n      .then(this._checkResponse);\r\n  }\r\n}\r\n\r\nexport default new Auth(authConfig);"],"mappings":"AAAA,SAASA,UAAT,QAA2B,aAA3B;;AAEA,MAAMC,IAAN,CAAW;EACTC,WAAW,OAAuB;IAAA,IAAtB;MAAEC,OAAF;MAAWC;IAAX,CAAsB;IAChC,KAAKC,QAAL,GAAgBF,OAAhB;IACA,KAAKG,QAAL,GAAgBF,OAAhB;EACD,CAJQ,CAMT;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EAEAG,cAAc,CAACC,GAAD,EAAM;IAClB,OAAQA,GAAG,CAACC,MAAJ,KAAe,GAAhB,GAAuBC,OAAO,CAACC,OAAR,CAAgBH,GAAG,CAACI,IAAJ,EAAhB,CAAvB,GAAqDF,OAAO,CAACG,MAAR,CAAeL,GAAG,CAACC,MAAnB,CAA5D;EACD;;EAEDK,QAAQ,CAACC,KAAD,EAAQC,QAAR,EAAkB;IACxBC,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmBC,QAAnB;IACAC,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAe;MAAEJ,QAAQ,EAAEA,QAAZ;MAAsBD,KAAK,EAAEA;IAA7B,CAAf,CAAZ;IACA,OAAOM,KAAK,CAAE,GAAE,KAAKhB,QAAS,SAAlB,EAA4B;MACpCiB,MAAM,EAAE,MAD4B;MAEpClB,OAAO,EAAE,KAAKE,QAFsB;MAGpCiB,IAAI,EAAEJ,IAAI,CAACC,SAAL,CAAe;QAAEJ,QAAQ,EAAEA,QAAZ;QAAsBD,KAAK,EAAEA;MAA7B,CAAf;IAH8B,CAA5B,CAAL,CAKJS,IALI,CAKC,KAAKjB,cALN,CAAP;EAMD;;EAEDkB,KAAK,QAAsB;IAAA,IAArB;MAAEV,KAAF;MAASC;IAAT,CAAqB;IACzB,OAAOK,KAAK,CAAE,GAAE,KAAKhB,QAAS,SAAlB,EAA4B;MACpCiB,MAAM,EAAE,MAD4B;MAEpClB,OAAO,EAAE,KAAKE,QAFsB;MAGpCiB,IAAI,EAAE;QACJ,SAASR,KAAK,CAACW,KADX;QAEJ,YAAYV,QAAQ,CAACU;MAFjB;IAH8B,CAA5B,CAAL,CAQJF,IARI,CAQC,KAAKjB,cARN,CAAP;EASD;;EAEDoB,UAAU,CAACC,KAAD,EAAQ;IAChB,OAAOP,KAAK,CAAE,GAAE,KAAKhB,QAAS,WAAlB,EAA8B;MACtCiB,MAAM,EAAE,KAD8B;MAEtClB,OAAO,EAAE;QACP,gBAAgB,kBADT;QAEP,iBAAmB,UAASwB,KAAM;MAF3B;IAF6B,CAA9B,CAAL,CAOJJ,IAPI,CAOC,KAAKjB,cAPN,CAAP;EAQD;;AApDQ;;AAuDX,eAAe,IAAIN,IAAJ,CAASD,UAAT,CAAf"},"metadata":{},"sourceType":"module"}