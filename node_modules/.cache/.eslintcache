[{"/Users/maksim/Desktop/dev/mesto-react/src/index.js":"1","/Users/maksim/Desktop/dev/mesto-react/src/components/App.js":"2","/Users/maksim/Desktop/dev/mesto-react/src/components/HomePage.js":"3","/Users/maksim/Desktop/dev/mesto-react/src/contexts/CurrentUserContext.js":"4","/Users/maksim/Desktop/dev/mesto-react/src/utils/ProtectedRoute.js":"5","/Users/maksim/Desktop/dev/mesto-react/src/components/AuthForms/Login.js":"6","/Users/maksim/Desktop/dev/mesto-react/src/components/AuthForms/Register.js":"7","/Users/maksim/Desktop/dev/mesto-react/src/components/Header.js":"8","/Users/maksim/Desktop/dev/mesto-react/src/components/Main.js":"9","/Users/maksim/Desktop/dev/mesto-react/src/utils/Api.js":"10","/Users/maksim/Desktop/dev/mesto-react/src/components/Footer.js":"11","/Users/maksim/Desktop/dev/mesto-react/src/components/Popups/EditProfilePopup.js":"12","/Users/maksim/Desktop/dev/mesto-react/src/components/Popups/AddPlacePopup.js":"13","/Users/maksim/Desktop/dev/mesto-react/src/components/Popups/EditAvatarPopup.js":"14","/Users/maksim/Desktop/dev/mesto-react/src/components/Popups/RemoveCardPopup.js":"15","/Users/maksim/Desktop/dev/mesto-react/src/components/Popups/ImagePopup.js":"16","/Users/maksim/Desktop/dev/mesto-react/src/components/Form.js":"17","/Users/maksim/Desktop/dev/mesto-react/src/components/Popups/InfoToolTipPopup.js":"18","/Users/maksim/Desktop/dev/mesto-react/src/custom_hooks/useInputHandling.js":"19","/Users/maksim/Desktop/dev/mesto-react/src/components/Card.js":"20","/Users/maksim/Desktop/dev/mesto-react/src/utils/constants.js":"21","/Users/maksim/Desktop/dev/mesto-react/src/components/Popups/PopupWithForm.js":"22","/Users/maksim/Desktop/dev/mesto-react/src/utils/Auth.js":"23"},{"size":265,"mtime":1661579382479,"results":"24","hashOfConfig":"25"},{"size":1331,"mtime":1661868819414,"results":"26","hashOfConfig":"25"},{"size":5911,"mtime":1661870202248,"results":"27","hashOfConfig":"25"},{"size":90,"mtime":1661579382475,"results":"28","hashOfConfig":"25"},{"size":311,"mtime":1661868839477,"results":"29","hashOfConfig":"25"},{"size":2836,"mtime":1661869788616,"results":"30","hashOfConfig":"25"},{"size":3649,"mtime":1661864580333,"results":"31","hashOfConfig":"25"},{"size":285,"mtime":1661824907584,"results":"32","hashOfConfig":"25"},{"size":1283,"mtime":1661579382473,"results":"33","hashOfConfig":"25"},{"size":2071,"mtime":1661826811033,"results":"34","hashOfConfig":"25"},{"size":167,"mtime":1661579382472,"results":"35","hashOfConfig":"25"},{"size":2536,"mtime":1661579382474,"results":"36","hashOfConfig":"25"},{"size":2190,"mtime":1661579382473,"results":"37","hashOfConfig":"25"},{"size":2001,"mtime":1661579382474,"results":"38","hashOfConfig":"25"},{"size":520,"mtime":1661579382475,"results":"39","hashOfConfig":"25"},{"size":945,"mtime":1661580793026,"results":"40","hashOfConfig":"25"},{"size":988,"mtime":1661837387570,"results":"41","hashOfConfig":"25"},{"size":1516,"mtime":1661864807813,"results":"42","hashOfConfig":"25"},{"size":971,"mtime":1661826256588,"results":"43","hashOfConfig":"25"},{"size":1516,"mtime":1661663627977,"results":"44","hashOfConfig":"25"},{"size":347,"mtime":1661836106639,"results":"45","hashOfConfig":"25"},{"size":1419,"mtime":1661658111432,"results":"46","hashOfConfig":"25"},{"size":1058,"mtime":1661855585801,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"g8x29s",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/maksim/Desktop/dev/mesto-react/src/index.js",[],[],"/Users/maksim/Desktop/dev/mesto-react/src/components/App.js",[],[],"/Users/maksim/Desktop/dev/mesto-react/src/components/HomePage.js",["127"],[],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Header from \"./Header\";\r\nimport Main from \"./Main\";\r\nimport Footer from \"./Footer\";\r\n\r\nimport api from '../utils/Api';\r\nimport auth from '../utils/Auth';\r\n\r\nimport ImagePopup from \"./Popups/ImagePopup\";\r\nimport EditProfilePopup from './Popups/EditProfilePopup';\r\nimport AddPlacePopup from './Popups/AddPlacePopup';\r\nimport EditAvatarPopup from './Popups/EditAvatarPopup';\r\nimport RemoveCardPopup from './Popups/RemoveCardPopup';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nexport default function HomePage({ authToken, onSignOut, setCurrentUser }) {\r\n\tconst currentUser = useContext(CurrentUserContext);\r\n  const [currentUserEmail, setCurrentUserEmail] = useState('');\r\n\r\n  const [isEditPopupOpen, setProfilePopupState] = useState(false);\r\n  const [isAddPlacePopupOpen, setCardPopupState] = useState(false);\r\n  const [isEditAvatarPopupOpen, setAvatarPopupState] = useState(false);\r\n  const [isImagePopupOpen, setImagePopupState] = useState(false);\r\n  const [popupIsLoading, setPopupIsLoading] = useState(false);\r\n\r\n  const [cards, setCards] = useState([]);\r\n  const [selectedCard, setSelectedCard] = useState(null);\r\n  const [cardToRemove, setCardToRemove] = useState(null);\r\n\r\n  useEffect(() => {\r\n    authToken && auth.checkToken(authToken)\r\n      .then(res => setCurrentUserEmail(res.data.email))\r\n      .catch(err => console.log(err));\r\n    api.getUserInfo()\r\n      .then(data => setCurrentUser(data))\r\n      .catch(err => console.log(err));\r\n    api.getCohortCards()\r\n      .then(cardList => setCards(cardList))\r\n      .catch(err => console.log(err));\r\n  }, [authToken])\r\n\r\n  function handleEditAvatarClick() {\r\n    setAvatarPopupState(true);\r\n  }\r\n  \r\n  function handleEditProfileClick() {\r\n    setProfilePopupState(true);\r\n  }\r\n  \r\n  function handleAddPlaceClick() {\r\n    setCardPopupState(true);\r\n  }\r\n\r\n  function handleRemoveCardClick(card) {\r\n    setCardToRemove(card);\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setImagePopupState(true);\r\n    setSelectedCard(card);\r\n  }\r\n\r\n  function closeAllPopups() {\r\n    setAvatarPopupState(false);\r\n    setCardPopupState(false);\r\n    setProfilePopupState(false);\r\n    setImagePopupState(false);\r\n\r\n    setCardToRemove(null);\r\n    setTimeout(() => { setSelectedCard(null) }, 200);\r\n  }\r\n\r\n  function handleCardLike(card, loadingFunc) {\r\n    const likedByUser = card.likes.some(user => user._id === currentUser._id );\r\n    const request = !likedByUser ? api.putCardLike(card._id) : api.removeCardLike(card._id);\r\n\r\n    loadingFunc(true);\r\n    request\r\n      .then(res => {\r\n        setCards(cards.map((cardItem) => res._id === cardItem._id ? res : cardItem));\r\n      })\r\n      .catch(err => console.log(err))\r\n      .finally(() => loadingFunc(false));\r\n  }\r\n\r\n  function handleCardRemove(card) {\r\n    setPopupIsLoading(true);\r\n    api.deleteCard(card._id)\r\n      .then(() => {\r\n        setCards(cards.filter((cardItem) => cardItem._id !== card._id && cardItem ));\r\n        closeAllPopups();\r\n      })\r\n      .catch(err => console.log(err))\r\n      .finally(() => setPopupIsLoading(false));\r\n  }\r\n\r\n  function handleAddPlace({ name, link }) {\r\n    setPopupIsLoading(true);\r\n    api.postSectionItem(name.value, link.value)\r\n      .then(res => {\r\n        setCards([res, ...cards]);\r\n        closeAllPopups();\r\n      })\r\n      .catch(err => console.log(err))\r\n      .finally(() => setPopupIsLoading(false));\r\n  }\r\n\r\n  function handleEditProfile({ name, about }) {\r\n    setPopupIsLoading(true);\r\n    api.patchUserInfo(name.value, about.value)\r\n      .then(res => {\r\n        setCurrentUser(res);\r\n        closeAllPopups();\r\n      })\r\n      .catch(err => console.log(err))\r\n      .finally(() => setPopupIsLoading(false));\r\n  }\r\n\r\n  function handleEditAvatar({ link }) {\r\n    setPopupIsLoading(true);\r\n    api.patchUserAvatar(link)\r\n      .then(res => {\r\n        setCurrentUser(res);\r\n        closeAllPopups();\r\n      })\r\n      .catch(err => console.log(err))\r\n      .finally(() => setPopupIsLoading(false));\r\n  }\r\n\r\n\treturn(\r\n    <>\r\n\t\t\t{\r\n        currentUserEmail &&\r\n        <Header \r\n          userEmail={ <p className=\"header__user-email \">{currentUserEmail}</p> }\r\n          redirectLink={ \r\n            <Link \r\n              className=\"header__link header__link_type_home\" \r\n              to=\"sign-in\" \r\n              onClick={onSignOut}\r\n            > Выйти \r\n            </Link> }\r\n        />\r\n      }\r\n      { \r\n        (currentUser && cards) &&\r\n        <Main \r\n          onEditProfile={handleEditProfileClick} \r\n          onAddPlace={handleAddPlaceClick}\r\n          onEditAvatar={handleEditAvatarClick}\r\n          onCardRemoval={handleRemoveCardClick}\r\n          cards={cards}\r\n          onCardClick={handleCardClick}\r\n          onCardLike={handleCardLike}\r\n        />\r\n      }\r\n      <ImagePopup \r\n        isOpen={isImagePopupOpen}\r\n        isLoading={popupIsLoading}\r\n        onClose={closeAllPopups}\r\n        card={selectedCard}\r\n      />\r\n      <AddPlacePopup \r\n        isOpen={isAddPlacePopupOpen}\r\n        isLoading={popupIsLoading}\r\n        onClose={closeAllPopups}\r\n        onSubmit={handleAddPlace}\r\n      />\r\n      <RemoveCardPopup \r\n        isLoading={popupIsLoading}\r\n        onClose={closeAllPopups}\r\n        onSubmit={handleCardRemove} \r\n        card={cardToRemove}\r\n      />\r\n\r\n      {\r\n        currentUser &&\r\n        <>\r\n          <EditAvatarPopup \r\n            isLoading={popupIsLoading}\r\n            isOpen={isEditAvatarPopupOpen}\r\n            onClose={closeAllPopups}\r\n            onSubmit={handleEditAvatar}\r\n          />\r\n          <EditProfilePopup\r\n            isLoading={popupIsLoading}\r\n            isOpen={isEditPopupOpen} \r\n            onClose={closeAllPopups}\r\n            onSubmit={handleEditProfile} \r\n          />\r\n        </>\r\n      }      \r\n\t\t\t<Footer />\r\n    </>\r\n\t)\r\n}","/Users/maksim/Desktop/dev/mesto-react/src/contexts/CurrentUserContext.js",[],[],"/Users/maksim/Desktop/dev/mesto-react/src/utils/ProtectedRoute.js",[],[],"/Users/maksim/Desktop/dev/mesto-react/src/components/AuthForms/Login.js",["128"],[],"import Form from \"../Form\";\r\nimport Header from \"../Header\";\r\nimport useInputHandling from \"../../custom_hooks/useInputHandling\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport auth from \"../../utils/Auth\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Login({ onSignIn }) {\r\n  const history = useHistory();\r\n  const [ isLoading, setIsLoading ] = useState(false);\r\n  const hookConfig = {\r\n    defaultInputs: { email: { value: '' }, password: { value: '' } },\r\n    defaultInputIsValidState: false\r\n  }\r\n  const [ inputs, isValid, handleInputsUpdate, handleChange ] = useInputHandling(hookConfig);\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    \r\n    setIsLoading(true);\r\n    auth.login(inputs.email.value, inputs.password.value)\r\n      .then((data) => { \r\n        onSignIn(data.token);\r\n        history.push('/');\r\n      })\r\n      .catch((err) => console.log(err))\r\n      .finally(() => setIsLoading(false));\r\n  }\r\n  return(\r\n    <>\r\n      <Header \r\n        redirectLink={\r\n          <Link className=\"header__link header__link_type_auth\" to=\"sign-up\">Регистрация</Link>\r\n        }\r\n      />\r\n      <Form\r\n        type='auth'\r\n        onSubmit={handleSubmit}\r\n        isLoading={isLoading}\r\n        isValid={isValid}\r\n        inputs={inputs}\r\n        name=\"login\" \r\n        title=\"Вход\" \r\n        submitText=\"Войти\"\r\n        loadingSubmitText=\"Вход\"\r\n        inputFieldset={\r\n          <fieldset className=\"form__input-container form__input-container_type_auth\">\r\n            <div className=\"form__field\">\r\n              <input\r\n                className={`form__input form__input_type_auth ${!(inputs.email?.isValid ?? true) ? 'form__input_invalid' : ''}`} \r\n                name=\"email\" \r\n                id=\"email-input\" \r\n                type=\"email\" \r\n                placeholder=\"Email\" \r\n                required \r\n                onChange={handleChange} \r\n                value={inputs.email?.value} \r\n              />\r\n              <span className=\"form__input-error\"> { inputs.email?.errorMessage } </span>\r\n            </div>\r\n            <div className=\"form__field\">\r\n              <input \r\n                className={`form__input form__input_type_auth ${!(inputs.password?.isValid ?? true) ? 'form__input_invalid' : ''}`} \r\n                name=\"password\" \r\n                id=\"password-input\" \r\n                type=\"password\" \r\n                placeholder=\"Пароль\" \r\n                required\r\n                minLength=\"2\" \r\n                maxLength=\"30\" \r\n                onChange={handleChange} \r\n                value={inputs.password?.value} \r\n              />\r\n              <span className=\"form__input-error\"> { inputs.password?.errorMessage } </span>\r\n            </div>\r\n          </fieldset>\r\n        } \r\n      />\r\n    </>\r\n  )\r\n}","/Users/maksim/Desktop/dev/mesto-react/src/components/AuthForms/Register.js",["129"],[],"import Form from \"../Form\";\r\nimport Header from \"../Header\";\r\nimport useInputHandling from \"../../custom_hooks/useInputHandling\";\r\nimport { useState } from \"react\";\r\nimport InfoToolTipPopup from \"../Popups/InfoToolTipPopup\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport auth from \"../../utils/Auth\";\r\n\r\nexport default function Register() {\r\n  const [ isLoading, setIsLoading ] = useState(false);\r\n  const [ isPopupOpen, setPopupState ] = useState(false);\r\n  const [ isRequestSucceeded, setRequestState ] = useState(false);\r\n  const hookConfig = {\r\n    defaultInputs: { email: { value: '' }, password: { value: '' } },\r\n    defaultInputIsValidState: false\r\n  }\r\n  const [ inputs, isValid, handleInputsUpdate, handleChange ] = useInputHandling(hookConfig);\r\n\r\n  function closePopup() {\r\n    setPopupState(false);\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n    \r\n    setIsLoading(true);\r\n    auth.register(inputs.email.value, inputs.password.value)\r\n      .then(() => setRequestState(true))\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setRequestState(false);\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false);\r\n        setPopupState(true);\r\n      });\r\n  }\r\n\r\n  return(\r\n    <>\r\n      { (isRequestSucceeded && !isPopupOpen) && <Redirect to='/sign-in' />}\r\n      <Header \r\n        redirectLink={\r\n          <Link className=\"header__link header__link_type_auth\" to=\"sign-in\">Войти</Link>\r\n        }\r\n      />\r\n      <Form\r\n        type='auth'\r\n        onSubmit={handleSubmit}\r\n        isLoading={isLoading}\r\n        isValid={isValid}\r\n        inputs={inputs}\r\n        name=\"register\" \r\n        title=\"Регистрация\" \r\n        submitText=\"Зарегистрироваться\"\r\n        loadingSubmitText=\"Регистрация\"\r\n        submitSubline={\r\n          <div className='form__submit-subline'>\r\n            <p className=\"form__submit-subline-text\">Уже зарегистрированы?</p>\r\n            <Link className=\"form__submit-subline-link\" to='sign-in' >Войти</Link>\r\n          </div>\r\n        }\r\n        inputFieldset={\r\n          <fieldset className=\"form__input-container form__input-container_type_auth\">\r\n            <div className=\"form__field\">\r\n              <input\r\n                className={`form__input form__input_type_auth ${!(inputs.email?.isValid ?? true) ? 'form__input_invalid' : ''}`} \r\n                name=\"email\" \r\n                id=\"email-input\" \r\n                type=\"email\" \r\n                placeholder=\"Email\" \r\n                required \r\n                onChange={handleChange} \r\n                value={inputs.email?.value} \r\n              />\r\n              <span className=\"form__input-error\"> { inputs.email?.errorMessage } </span>\r\n            </div>\r\n            <div className=\"form__field\">\r\n              <input \r\n                className={`form__input form__input_type_auth ${!(inputs.password?.isValid ?? true) ? 'form__input_invalid' : ''}`} \r\n                name=\"password\" \r\n                id=\"password-input\" \r\n                type=\"password\" \r\n                placeholder=\"Пароль\" \r\n                required\r\n                minLength=\"2\" \r\n                maxLength=\"30\" \r\n                onChange={handleChange} \r\n                value={inputs.password?.value} \r\n              />\r\n              <span className=\"form__input-error\"> { inputs.password?.errorMessage } </span>\r\n            </div>\r\n          </fieldset>\r\n        } \r\n      />\r\n      <InfoToolTipPopup \r\n        isOpen={isPopupOpen}\r\n        onClose={closePopup}\r\n        isSucceeded={isRequestSucceeded}\r\n      />\r\n    </>\r\n  )\r\n}","/Users/maksim/Desktop/dev/mesto-react/src/components/Header.js",[],[],"/Users/maksim/Desktop/dev/mesto-react/src/components/Main.js",[],[],"/Users/maksim/Desktop/dev/mesto-react/src/utils/Api.js",[],[],"/Users/maksim/Desktop/dev/mesto-react/src/components/Footer.js",[],[],"/Users/maksim/Desktop/dev/mesto-react/src/components/Popups/EditProfilePopup.js",["130"],[],"import React, { useContext, useEffect } from \"react\";\nimport { CurrentUserContext } from \"../../contexts/CurrentUserContext\";\nimport useInputHandling from \"../../custom_hooks/useInputHandling\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nexport default function EditProfilePopup({ isOpen, isLoading, onClose, onSubmit }) {\n  const currentUser = useContext(CurrentUserContext);\n  const hookConfig = {\n    defaultInputs: { name: { value: currentUser.name }, about: { value: currentUser.about } },\n    defaultInputIsValidState: true\n  }\n  const [ inputs, isValid, handleInputsUpdate, handleChange ] = useInputHandling(hookConfig, isOpen);\n\n  // useEffect(() => {\n  //   console.log('popup', isValid)\n  // }, [isValid])\n\n  useEffect(() => {\n    const delay = isOpen ? 0 : 200; \n\n    setTimeout(() => handleInputsUpdate(), delay);\n  }, [isOpen]);\n\n  return(\n    <PopupWithForm\n      onClose={onClose}\n      onSubmit={onSubmit}\n      isOpen={isOpen}\n      isLoading={isLoading}\n      isValid={isValid}\n      inputs={inputs}\n      name=\"profile-edit\" \n      title=\"Редактировать профиль\" \n      submitText=\"Сохранить\"\n      loadingSubmitText=\"Сохранение\"\n      inputFieldset={\n        <fieldset className={`form__input-container form__input-container_type_popup`}>\n          <div className=\"form__field\">\n            <input\n              className={`form__input form__input_type_popup ${!(inputs.name?.isValid ?? true) ? 'form__input_invalid' : ''}`} \n              name=\"name\" \n              id=\"name-input\" \n              type=\"text\" \n              placeholder=\"Имя\" \n              required \n              minLength=\"2\" \n              maxLength=\"40\" \n              onChange={handleChange} \n              value={inputs.name?.value} \n            />\n            <span className=\"form__input-error\"> { inputs.name?.errorMessage } </span>\n          </div>\n          <div className=\"form__field\">\n            <input \n              className={`form__input form__input_type_popup ${!(inputs.about?.isValid ?? true) ? 'form__input_invalid' : ''}`} \n              name=\"about\" \n              id=\"about-input\" \n              type=\"text\" \n              placeholder=\"О себе\" \n              required \n              minLength=\"2\" \n              maxLength=\"200\" \n              onChange={handleChange} \n              value={inputs.about?.value} \n            />\n            <span className=\"form__input-error\"> { inputs.about?.errorMessage } </span>\n          </div>\n        </fieldset>\n      } \n    />\n  )\n}\n\n","/Users/maksim/Desktop/dev/mesto-react/src/components/Popups/AddPlacePopup.js",["131"],[],"import React, { useEffect } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport useInputHandling from \"../../custom_hooks/useInputHandling\";\n\nexport default function AddPlacePopup({ isOpen, isLoading, onClose, onSubmit }) {\n  const hookConfig = {\n    defaultInputs: { name: { value: '' }, link: { value: '' } },\n    defaultInputIsValidState: false\n  }\n  const [ inputs, isValid, handleInputsUpdate, handleChange ] = useInputHandling(hookConfig, isOpen);\n\n  useEffect(() => {\n    !isOpen && setTimeout(() => handleInputsUpdate(), 200);\n  }, [isOpen]);\n\n  return(\n    <PopupWithForm \n      onClose={onClose}\n      onSubmit={onSubmit}\n      isOpen={isOpen}\n      isLoading={isLoading}\n      isValid={isValid}\n      inputs={inputs}\n      name=\"card-add\" \n      title=\"Новое место\"\n      submitText=\"Создать\"\n      loadingSubmitText=\"Создание\"\n      inputFieldset={\n        <fieldset className=\"form__input-container form__input-container_type_popup\">\n          <div className=\"form__field\">\n            <input  \n              className={`form__input form__input_type_popup ${!(inputs.name?.isValid ?? true) ? 'form__input_invalid' : ''}`}\n              name=\"name\" \n              id=\"title-input\" \n              type=\"text\" \n              placeholder=\"Название\" \n              required \n              minLength=\"2\" \n              maxLength=\"30\" \n              onChange={handleChange} \n              value={inputs.name?.value} \n            />\n            <span className=\"form__input-error\"> { inputs.name?.errorMessage } </span>\n          </div>\n          <div className=\"form__field\">\n            <input\n              className={`form__input form__input_type_popup ${!(inputs.link?.isValid ?? true) ? 'form__input_invalid' : ''}`}\n              name=\"link\" \n              id=\"link-input\" \n              type=\"url\" \n              placeholder=\"Ссылка на картинку\" \n              required \n              onChange={handleChange} \n              value={inputs.link?.value} \n            />\n            <span className=\"form__input-error\"> { inputs.link?.errorMessage } </span>\n          </div>\n        </fieldset>\n      } \n    />\n  )\n}\n\n","/Users/maksim/Desktop/dev/mesto-react/src/components/Popups/EditAvatarPopup.js",["132"],[],"import React, { useEffect, useRef, useState } from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nexport default function EditAvatarPopup({ isOpen, isLoading, onClose, onSubmit }) {\n  const linkInput = useRef();\n  const linkInputError = useRef();\n  const [ isValid, setIsValid ] = useState(false);\n\n  useEffect(() => {\n    !isOpen && setTimeout(() => handleInputsUpdate(), 200);\n  }, [isOpen]);\n\n  function clearFieldset() {\n    const input = linkInput.current;\n\n    linkInputError.textContent = '';\n    input.value = null;\n    input.classList.remove('form__input_invalid');\n  }\n\n  function handleInputsUpdate() {\n    setIsValid(false);\n    clearFieldset();\n  }\n\n  function handleChange() {\n    const input = linkInput.current;\n\n    linkInputError.current.textContent = input.validationMessage;\n    if (!input.validity.valid) {\n      input.classList.add('form__input_invalid');\n      setIsValid(false);\n    } else {\n      input.classList.remove('form__input_invalid');\n      setIsValid(true);\n    }\n  }\n\n  return(\n    <PopupWithForm \n      onClose={onClose}\n      onSubmit={onSubmit}\n      isOpen={isOpen}\n      isLoading={isLoading}\n      isValid={isValid}\n      inputs={{link: linkInput.current?.value}}\n      name=\"avatar-edit\" \n      title=\"Обновить аватар\" \n      submitText=\"Сохранить\"\n      loadingSubmitText=\"Сохранение\"\n      inputFieldset={\n        <fieldset className=\"form__input-container form__input-container_type_popup\">\n          <div className=\"form__field\">\n            <input\n              className=\"form__input form__input_type_popup\"\n              ref={linkInput} \n              name=\"avatar\" \n              id=\"avatar-link-input\" \n              type=\"url\" \n              placeholder=\"Ссылка на картинку\" \n              required \n              onChange={handleChange} \n            />\n            <span ref={linkInputError} className=\"form__input-error\"></span>\n          </div>\n        </fieldset>\n      } \n    />\n  )\n}\n\n","/Users/maksim/Desktop/dev/mesto-react/src/components/Popups/RemoveCardPopup.js",[],[],"/Users/maksim/Desktop/dev/mesto-react/src/components/Popups/ImagePopup.js",["133","134"],[],"import { useCallback, useEffect } from \"react\";\n\nexport default function ImagePopup({ isOpen, card, onClose }) {\n  const closeByEscapeCallBack = useCallback((evt) => {\n    evt.key === 'Escape' && onClose();\n  }, [])\n  \n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', closeByEscapeCallBack);\n    } else {\n      document.removeEventListener('keydown', closeByEscapeCallBack);\n    }\n  }, [isOpen]);\n\n  function handleClose(evt) {\n    evt.target.classList.contains('popup') && onClose();\n  }\n\n  return (\n    <section className={`popup popup_type_image-view ${isOpen ? \"popup_active\" : ''}`} onMouseDown={handleClose} >\n      <div className=\"popup__image-container\">\n        <button className=\"popup__close-button\" type=\"button\" onClick={onClose} />\n        <img className=\"popup__image\" src={card?.link} alt={card?.name} />\n        <p className=\"popup__image-title\">{card?.name}</p>\n      </div>\n    </section>\n  )\n}","/Users/maksim/Desktop/dev/mesto-react/src/components/Form.js",[],[],"/Users/maksim/Desktop/dev/mesto-react/src/components/Popups/InfoToolTipPopup.js",["135","136"],[],"import imageSuccess from '../../images/popup__tooltip-image_success.svg';\r\nimport imageFail from '../../images/popup__tooltip-image_fail.svg';\r\nimport { useCallback, useEffect } from 'react';\r\n\r\nexport default function InfoToolTipPopup({ isOpen, onClose, isSucceeded }) {\r\n  const closeByEscapeCallBack = useCallback((evt) => {\r\n    evt.key === 'Escape' && onClose();\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      document.addEventListener('keydown', closeByEscapeCallBack);\r\n    } else {\r\n      document.removeEventListener('keydown', closeByEscapeCallBack);\r\n    }\r\n  }, [isOpen]);\r\n\r\n  function handleClose(evt) {\r\n    evt.target.classList.contains('popup') && onClose();\r\n  }\r\n\r\n  return(\r\n    <section className={`popup popup_type_tooltip ${isOpen ? 'popup_active' : ''}`} onMouseDown={handleClose} >\r\n      <div className=\"popup__container\">\r\n        <div className=\"popup__tooltip\">\r\n          <img \r\n            className=\"popup__tooltip-image\" \r\n            src={isSucceeded ? imageSuccess : imageFail} \r\n            alt={isSucceeded ? 'Запрос выполнен' : 'Запрос отклонен'} \r\n          />\r\n          <h2 className=\"popup__tooltip-message\" >\r\n            {isSucceeded ? 'Вы успешно зарегистрировались!' : 'Что-то пошло не так! Попробуйте ещё раз.'}\r\n          </h2>\r\n        </div>\r\n        <button className=\"popup__close-button\" type=\"button\" onClick={onClose} />\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","/Users/maksim/Desktop/dev/mesto-react/src/custom_hooks/useInputHandling.js",["137","138"],[],"import { useEffect, useRef, useState } from \"react\";\r\n\r\nexport default function useInputHandling({ defaultInputs, defaultInputIsValidState }, isOpen = true) {\r\n  const [ inputs, setInputs ] = useState(defaultInputs);\r\n  const [ isValid, setIsValid ] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      const someInputIsInvalid = Object.values(inputs).some(input => !(input?.isValid ?? defaultInputIsValidState));\r\n\r\n      !someInputIsInvalid ? setIsValid(true) : setIsValid(false);\r\n    }\r\n  }, [inputs]);\r\n\r\n  function handleInputsUpdate() {\r\n    setInputs(defaultInputs);\r\n    \r\n    setIsValid(false);\r\n  }\r\n\r\n  function handleChange(evt) {\r\n    const input = evt.target;\r\n    const value = input.value;\r\n    const isValid = input.validity.valid;\r\n    const errorMessage = input.validationMessage;\r\n\r\n    setInputs({ ...inputs, [input.name]: { value, isValid, errorMessage } });\r\n  }\r\n\r\n  return [ inputs, isValid, handleInputsUpdate, handleChange ];\r\n}","/Users/maksim/Desktop/dev/mesto-react/src/components/Card.js",[],[],"/Users/maksim/Desktop/dev/mesto-react/src/utils/constants.js",[],[],"/Users/maksim/Desktop/dev/mesto-react/src/components/Popups/PopupWithForm.js",["139","140"],[],"import { useCallback, useEffect } from \"react\"\r\nimport Form from \"../Form\";\r\n\r\nexport default function PopupWithForm({ name, title, submitText, loadingSubmitText, onClose, onSubmit, isOpen, isLoading, isValid, inputFieldset, inputs }) {\r\n  const closeByEscapeCallBack = useCallback((evt) => {\r\n    evt.key === 'Escape' && onClose();\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      document.addEventListener('keydown', closeByEscapeCallBack);\r\n    } else {\r\n      document.removeEventListener('keydown', closeByEscapeCallBack);\r\n    }\r\n  }, [isOpen]);\r\n\r\n  function handleClose(evt) {\r\n    evt.target.classList.contains('popup') && onClose();\r\n  }\r\n\r\n  function handleSubmit(evt) {\r\n    evt.preventDefault();\r\n\r\n    onSubmit(inputs);\r\n  }\r\n\r\n  return (\r\n    <section className={`popup popup_type_${name} ${isOpen ? \"popup_active\" : \"\"}`} onMouseDown={handleClose} >\r\n      <div className=\"popup__container\">\r\n        <Form\r\n          type='popup'\r\n          onSubmit={handleSubmit}\r\n          isOpen={isOpen}\r\n          isLoading={isLoading}\r\n          isValid={isValid}\r\n          inputs={inputs}\r\n          name={name} \r\n          title={title} \r\n          submitText={submitText}\r\n          loadingSubmitText={loadingSubmitText}\r\n          inputFieldset={inputFieldset}\r\n        />\r\n        <button className=\"popup__close-button\" type=\"button\" onClick={onClose} />\r\n      </div>\r\n    </section>\r\n  )\r\n}","/Users/maksim/Desktop/dev/mesto-react/src/utils/Auth.js",[],[],{"ruleId":"141","severity":1,"message":"142","line":42,"column":6,"nodeType":"143","endLine":42,"endColumn":17,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":15,"column":28,"nodeType":"147","messageId":"148","endLine":15,"endColumn":46},{"ruleId":"145","severity":1,"message":"146","line":17,"column":28,"nodeType":"147","messageId":"148","endLine":17,"endColumn":46},{"ruleId":"141","severity":1,"message":"149","line":22,"column":6,"nodeType":"143","endLine":22,"endColumn":14,"suggestions":"150"},{"ruleId":"141","severity":1,"message":"149","line":14,"column":6,"nodeType":"143","endLine":14,"endColumn":14,"suggestions":"151"},{"ruleId":"141","severity":1,"message":"149","line":11,"column":6,"nodeType":"143","endLine":11,"endColumn":14,"suggestions":"152"},{"ruleId":"141","severity":1,"message":"153","line":6,"column":6,"nodeType":"143","endLine":6,"endColumn":8,"suggestions":"154"},{"ruleId":"141","severity":1,"message":"155","line":14,"column":6,"nodeType":"143","endLine":14,"endColumn":14,"suggestions":"156"},{"ruleId":"141","severity":1,"message":"153","line":8,"column":6,"nodeType":"143","endLine":8,"endColumn":8,"suggestions":"157"},{"ruleId":"141","severity":1,"message":"155","line":16,"column":6,"nodeType":"143","endLine":16,"endColumn":14,"suggestions":"158"},{"ruleId":"145","severity":1,"message":"159","line":1,"column":21,"nodeType":"147","messageId":"148","endLine":1,"endColumn":27},{"ruleId":"141","severity":1,"message":"160","line":13,"column":6,"nodeType":"143","endLine":13,"endColumn":14,"suggestions":"161"},{"ruleId":"141","severity":1,"message":"153","line":7,"column":6,"nodeType":"143","endLine":7,"endColumn":8,"suggestions":"162"},{"ruleId":"141","severity":1,"message":"155","line":15,"column":6,"nodeType":"143","endLine":15,"endColumn":14,"suggestions":"163"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCurrentUser'. Either include it or remove the dependency array. If 'setCurrentUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["164"],"no-unused-vars","'handleInputsUpdate' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'handleInputsUpdate'. Either include it or remove the dependency array.",["165"],["166"],["167"],"React Hook useCallback has a missing dependency: 'onClose'. Either include it or remove the dependency array. If 'onClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["168"],"React Hook useEffect has a missing dependency: 'closeByEscapeCallBack'. Either include it or remove the dependency array.",["169"],["170"],["171"],"'useRef' is defined but never used.","React Hook useEffect has missing dependencies: 'defaultInputIsValidState' and 'isOpen'. Either include them or remove the dependency array.",["172"],["173"],["174"],{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"177","fix":"179"},{"desc":"177","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"181","fix":"185"},{"desc":"183","fix":"186"},{"desc":"187","fix":"188"},{"desc":"181","fix":"189"},{"desc":"183","fix":"190"},"Update the dependencies array to be: [authToken, setCurrentUser]",{"range":"191","text":"192"},"Update the dependencies array to be: [handleInputsUpdate, isOpen]",{"range":"193","text":"194"},{"range":"195","text":"194"},{"range":"196","text":"194"},"Update the dependencies array to be: [onClose]",{"range":"197","text":"198"},"Update the dependencies array to be: [closeByEscapeCallBack, isOpen]",{"range":"199","text":"200"},{"range":"201","text":"198"},{"range":"202","text":"200"},"Update the dependencies array to be: [defaultInputIsValidState, inputs, isOpen]",{"range":"203","text":"204"},{"range":"205","text":"198"},{"range":"206","text":"200"},[1708,1719],"[authToken, setCurrentUser]",[833,841],"[handleInputsUpdate, isOpen]",[554,562],[392,400],[212,214],"[onClose]",[418,426],"[closeByEscapeCallBack, isOpen]",[374,376],[589,597],[511,519],"[defaultInputIsValidState, inputs, isOpen]",[339,341],[554,562]]